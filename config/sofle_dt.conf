# Copyright (c) 2020 Ryan Cross
# SPDX-License-Identifier: MIT

# Uncomment the following line to enable the Sofle OLED Display
CONFIG_ZMK_DISPLAY=y

# Uncomment these two lines to add support for encoders
CONFIG_EC11=y
CONFIG_EC11_TRIGGER_GLOBAL_THREAD=y

CONFIG_ZMK_DISPLAY_WORK_QUEUE_DEDICATED=y

# Enables RGB functionality (Uncomment lines below to enable.)
CONFIG_ZMK_RGB_UNDERGLOW=y
CONFIG_WS2812_STRIP=y

CONFIG_ZMK_BACKLIGHT_AUTO_OFF_USB=n

# disable "Underglow toggling also controls external power" so that OLED can still run with RGB off
CONFIG_ZMK_RGB_UNDERGLOW_EXT_POWER=n

#
# Logging
#

#CONFIG_ZMK_USB_LOGGING=y
#CONFIG_ZMK_LOGGING_MINIMAL=y
#CONFIG_PS2_LOG_LEVEL_DBG=n
#CONFIG_UART_LOG_LEVEL_DBG=n
#CONFIG_LOG_MODE_IMMEDIATE=n


# This setting is important to get the full log instead of
# one where the initial parts are cut out
#CONFIG_LOG_PROCESS_THREAD_STARTUP_DELAY_MS=3000


#
# Configure PS2 Mouse / Trackpoint Driver Settings
#

# Enable compatibility with urob's zmk fork:
# https://github.com/urob/zmk
#
# Urob's fork is a popular way to beta test zmk's mouse keys without
# maintaining your own fork.
#
# But some of his additions also introduce changes that make some zmk
# "APIs" incompatible with zmk main and produce compile errors.
#
# Enable this option to make the PS2 mouse driver compatible with his
# fork.
# CONFIG_ZMK_INPUT_MOUSE_PS2_ENABLE_UROB_COMPAT=n

# Enable additional error mitigations to prevent cursor jumps
# Disabled by default and only recommended if using the GPIO PS2 driver
# CONFIG_ZMK_INPUT_MOUSE_PS2_ENABLE_ERROR_MITIGATION=y

# Enable the PS2 protocol driver to report transmission errors to the mouse
# driver. This way the mouse driver can re-align its command buffer and reduce
# unexpected clicks or mouse movement in cases when the controller can't keep
# up with the data from the mouse or trackpoint.
#
# This setting is not necessary when using the PS2 UART driver, but is very
# helpful for the PS2 GPIO driver, because that driver experiences connection
# errors much more frequently.
#
# But this option requires zmk to be built with a forked zephyr that contains
# the following commit: `drivers: ps2: Add resend callback to ps/2 interface`
#
# You can find it here:
# https://github.com/infused-kim/zmk-zephyr/tree/dev/ps2_resend_callback_only
#
# I won't keep this branch updated, so just cherry pick the commit onto the
# latest zephyr branch zmk uses.
#
# TLDR: You don't need this unless you use the PS2 GPIO driver and you really
# shouldn't use that driver unless the PS2 UART driver doesn't work. And if
# it doesn't work, then it's better to find a solution to that than to use
# this.
# CONFIG_PS2_GPIO_ENABLE_PS2_RESEND_CALLBACK=y
# CONFIG_PS2_UART_ENABLE_PS2_RESEND_CALLBACK=y

#
# System Settings
#

# Save config to flash more frequently
# Default is 60s and this lowers it to 10
# Only use this setting for debugging.
# Prolonged use can lead to flash chip degradation
# CONFIG_ZMK_SETTINGS_SAVE_DEBOUNCE 10000

# Enable experimental BLE settings
# CONFIG_ZMK_BLE_EXPERIMENTAL_CONN=y