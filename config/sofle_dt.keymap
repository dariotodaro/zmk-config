/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define MAC          0
#define WINDOWS      1
#define LOWER        2
#define RAISE        3
#define ADJUST       4

#define MOUSE_TP     9
#define MOUSE_TP_SET 10

#include <dt-bindings/zmk/ext_power.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <behaviors/mouse_keys.dtsi>

// Mouse layers
#define AUTOMOUSE 5
#define MOUSE 6
#define SCRL 7
#define SNIPE 8
&mmv {
    time-to-max-speed-ms = <0>;
    acceleration-exponent = <1>;
};

&msc {
    time-to-max-speed-ms = <0>;
    acceleration-exponent = <1>;
};

/ {
    macros {
        bt0_and_osx: bt0_and_osx {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&bt BT_SEL 0>,
                <&to MAC>;
        };
        bt1_and_win: bt1_and_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&bt BT_SEL 1>,
                <&to WINDOWS>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_LBRACKET {
            timeout-ms = <50>;
            key-positions = <13 25>;
            bindings = <&kp LBKT>;
        };
        combo_LCURLYBRACE {
            timeout-ms = <50>;
            key-positions = <14 26>;
            bindings = <&kp LS(LBKT)>;
        };
        combo_LPARENTHESIS {
            timeout-ms = <50>;
            key-positions = <15 27>;
            bindings = <&kp LS(N9)>;
        };
        combo_DASH {
            timeout-ms = <50>;
            key-positions = <16 28>;
            bindings = <&kp MINUS>;
        };
        combo_LOWDASH {
            timeout-ms = <50>;
            key-positions = <17 29>;
            bindings = <&kp LS(MINUS)>;
        };

        combo_RBRACKET {
            timeout-ms = <50>;
            key-positions = <22 34>;
            bindings = <&kp RBKT>;
        };
        combo_RCURLYBRACE {
            timeout-ms = <50>;
            key-positions = <21 33>;
            bindings = <&kp LS(RBKT)>;
        };
        combo_RPARENTHESIS {
            timeout-ms = <50>;
            key-positions = <20 32>;
            bindings = <&kp LS(N0)>;
        };
        combo_EQUAL {
            timeout-ms = <50>;
            key-positions = <19 31>;
            bindings = <&kp EQUAL>;
        };
        combo_PLUS {
            timeout-ms = <50>;
            key-positions = <18 30>;
            bindings = <&kp LS(EQUAL)>;
        };
        compatible = "zmk,combos";
    };
};
/*
 * Defines to enable/disable features
 *
 * These defines allow us to conditionally enable and disable parts of the keymap config.
 *
 * For example, if we decide to build the firmware without the mouse features, we can
 * disable all the config options that rely on those forks and modules without having
 * to edit the entire keymap file manually every time.
 */

// #define HAS_MOUSE_TP

#ifdef HAS_MOUSE_TP
  // We store the trackpoint settings in a separate file
  // to make organization a little easier.
  #include "include/mouse_tp.dtsi"
#endif  // HAS_MOUSE_TP

#ifdef HAS_MOUSE_TP
  #define U_TOG_TP_SET &tog MOUSE_TP_SET
#else
  #define U_TOG_TP_SET &none
#endif  // HAS_MOUSE_TP

/ {
   conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "macOS";
            bindings = <
            &kp ESCAPE      &kp N1      &kp N2                  &kp N3          &kp N4                  &kp N5                                                      &kp N6              &kp N7                  &kp N8          &kp N9                  &kp N0          &kp DEL
            &kp DEL         &kp Q       &kp W                   &kp E           &kp R                   &kp T                                                       &kp Y               &kp U                   &kp I           &kp O                   &kp P           &kp BSPC
            &kp TAB         &kp A       &kp S                   &kp D           &kp F                   &kp G                                                       &kp H               &kp J                   &kp K           &kp L                   &kp SEMI        &kp SQT
            &kp LSHFT       &kp Z       &kp X                   &kp C           &kp V                   &kp B               &mo ADJUST              &kp C_PLAY      &kp N               &kp M                   &kp COMMA       &kp DOT                 &kp FSLH        &kp RSHFT
                                        &kp LEFT_CONTROL        &kp LALT        &kp LEFT_COMMAND        &lt LOWER SPACE     &kp RET                 &kp RET         &lt MOUSE SPACE     &kp RIGHT_COMMAND       &kp LALT        &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        windows {
            display-name = "windows";
            bindings = <
            &kp ESCAPE      &kp N1      &kp N2                  &kp N3          &kp N4                  &kp N5                                                      &kp N6              &kp N7                  &kp N8          &kp N9                  &kp N0          &kp DEL
            &kp DEL         &kp Q       &kp W                   &kp E           &kp R                   &kp T                                                       &kp Y               &kp U                   &kp I           &kp O                   &kp P           &kp BSPC
            &kp TAB         &kp A       &kp S                   &kp D           &kp F                   &kp G                                                       &kp H               &kp J                   &kp K           &kp L                   &kp SEMI        &kp SQT
            &kp LSHFT       &kp Z       &kp X                   &kp C           &kp V                   &kp B               &mo MOUSE               &kp C_PLAY      &kp N               &kp M                   &kp COMMA       &kp DOT                 &kp FSLH        &kp RSHFT
                                        &kp LEFT_COMMAND        &kp LALT        &kp LEFT_CONTROL        &lt LOWER SPACE     &kp RET                 &kp RET         &lt MOUSE SPACE     &kp RIGHT_CONTROL       &kp LALT        &kp RIGHT_COMMAND
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        LOWER {
            display-name = "lower";
            bindings = <
            &kp F12     &kp F1      &kp F2      &kp F3      &kp F4      &kp F5                                          &kp F6          &kp F7          &kp F8          &kp F9          &kp F10             &kp F11
            &kp GRAVE   &trans      &kp N7      &kp N8      &kp N9      &trans                                          &trans          &trans          &kp HOME        &kp END         &kp PAGE_UP         &trans
            &trans      &kp N0      &kp N4      &kp N5      &kp N6      &trans                                          &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT       &kp PAGE_DOWN       &kp PIPE
            &trans      &kp N0      &kp N1      &kp N2      &kp N3      &kp DOT     &trans              &kp LG(0)       &trans          &trans          &trans          &trans          &kp BSLH            &trans
                                    &trans      &trans      &trans      &mo RAISE   &trans              &trans          &mo RAISE       &trans          &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp LG(MINUS) LG(PLUS)>;
        };

        HIGH {
            display-name = "raise";
            bindings = <
            &trans      &trans      &trans      &trans      &trans      &trans                                              &trans      &trans      &trans          &trans      &trans              &trans
            &trans      &kp F1      &kp F2      &kp F3      &kp F4      &kp F5                                              &kp F6      &kp F7      &kp F8          &kp F9      &kp F10             &kp F11
            &trans      &trans      &trans      &trans      &trans      &trans                                              &kp LEFT    &kp DOWN    &kp UP          &kp RIGHT   &kp PAGE_UP         &kp F12
            &trans      &trans      &trans      &trans      &trans      &trans      &trans                    &trans        &trans      &trans      &kp HOME        &kp END     &kp PAGE_DOWN       &trans
                                    &trans      &trans      &trans      &trans      &trans                    &trans        &trans      &trans      &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp LG(PLUS) LG(MINUS)>;
        };

        ADJUST {
            display-name = "adjust";
            bindings = <
            &bt BT_CLR          &bt0_and_osx    &bt1_and_win    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                            &to MAC &to WINDOWS     &none   &none   &none   &trans
            &ext_power EP_TOG   &none           &none           &none           &none           &none                                   &none   &kp C_BRI_INC   &none   &none   &none   &none
            &none               &none           &none           &none           &none           &none                                   &none   &kp C_BRI_DEC   &none   &none   &none   &none
            &none               &none           &none           &none           &none           &none           &none           &none   &none   &none           &none   &none   &none   &none
                                                &none           &none           &none           &none           &none           &none   &none   &none           &none   &none
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_DEC C_BRI_INC>;
        };

        AUTO-MOUSE {
            bindings = <
            &trans    &trans    &trans     &trans     &trans     &trans                            &trans    &trans     &trans     &trans     &trans    &trans
            &trans    &trans    &trans     &trans     &trans     &trans                            &trans    &mo SCRL   &mo SNIPE  &trans     &trans    &trans
            &trans    &trans    &trans     &trans     &trans     &trans                            &trans    &mkp LCLK  &mkp RCLK  &mkp MCLK  &trans    &trans
            &trans    &trans    &trans     &trans     &trans     &trans    &trans        &trans    &trans    &trans     &trans     &trans     &trans    &trans
                                &trans     &trans     &trans     &trans    &trans        &trans    &trans    &trans     &trans     &trans
            >;
        };

        MOUSE {
            bindings = <
            &trans    &trans    &trans     &trans     &trans     &trans                            &trans    &trans     &trans     &trans     &trans    &trans
            &trans    &trans    &trans     &trans     &trans     &trans                            &trans    &mo SCRL   &mo SNIPE  &trans     &trans    &trans
            &trans    &trans    &trans     &trans     &trans     &trans                            &trans    &mkp LCLK  &mkp RCLK  &mkp MCLK  &trans    &trans
            &trans    &trans    &trans     &trans     &trans     &trans    &trans        &trans    &trans    &trans     &trans     &trans     &trans    &trans
                                &trans     &trans     &trans     &trans    &trans        &trans    &trans    &trans     &trans     &trans
            >;
        };

        SCROLL {
            bindings = <
            &trans    &trans    &trans     &trans     &trans     &trans                            &trans    &trans     &trans     &trans     &trans    &trans
            &trans    &trans    &trans     &trans     &trans     &trans                            &trans    &trans     &trans     &trans     &trans    &trans
            &trans    &trans    &trans     &trans     &trans     &trans                            &trans    &trans     &trans     &trans     &trans    &trans
            &trans    &trans    &trans     &trans     &trans     &trans    &trans        &trans    &trans    &trans     &trans     &trans     &trans    &trans
                                &trans     &trans     &trans     &trans    &trans        &trans    &trans    &trans     &trans     &trans
            >;
        };
  };
};